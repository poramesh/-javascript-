The Array.from() method in JavaScript creates a new array instance from an array-like or
iterable object, such as a string, NodeList, or another array.

Syntax:

Array.from(arrayLike, mapFn, thisArg);

arrayLike: The array-like or iterable object that you want to convert to an array.
mapFn (Optional): A map function that can be applied to each element of the array before returning the result.
thisArg (Optional): The value to use as this when executing mapFn.

Default Behavior:

Without a mapFn, Array.from() simply creates a new array with the elements of the iterable or array-like object.

Examples:
Converting a String to an Array:

const str = "hello";

const arr = Array.from(str);
console.log(arr);  // ['h', 'e', 'l', 'l', 'o']


Converting a NodeList to an Array:

const divs = document.querySelectorAll('div');
const divArray = Array.from(divs);
console.log(divArray);  // Array of div elements


Creating an Array with a Length: You can also create an array of a specific length by using an object with a length property.

const arr = Array.from({ length: 3 }, (_, index) => index);
console.log(arr);  // [0, 1, 2]


Here’s a breakdown of the parameters:

The first parameter { length: 3 } specifies the length of the array you're creating.

The second parameter is a function that gets executed for each element in the new array. This function has two arguments:

The first argument (represented by _) is the current value of the array element (which is not used in this case).
The _ in this case would be undefined (since the array is being created with no initial values),
and the array would end up being filled with undefined values. But since we don’t need the value, _ is used as a convention to indicate we’re not using it.

The second argument (represented by index) is the index of the current element in the array.

The _ is often used as a convention when you don't need to use the first argument (the current element's value). It’s just a placeholder
indicating that this value is intentionally ignored



Using a mapFn:

const arr = Array.from([1, 2, 3], x => x * 2);
console.log(arr);  // [2, 4, 6]


With thisArg:

function multiply(x) {
  return x * this.factor;
}
const arr = Array.from([1, 2, 3], multiply, { factor: 2 });
console.log(arr);  // [2, 4, 6]


Summary:
Array.from() is a versatile function that can convert array-like objects and iterables into arrays.
It can also accept a map function to transform the elements during the conversion process.
It can be initialized from array-like objects, iterables, or with specific lengths, providing flexibility
for array creation and transformation.
